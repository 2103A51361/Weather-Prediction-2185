# -*- coding: utf-8 -*-
"""LR Weather Prediction 2185.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z87seV8geIe_0OuiLir1oyXZr0msyyBf
"""

from google.colab import files

uploaded = files.upload()

for fn in uploaded.keys():
  print('User uploaded file "{name}" with length {length} bytes'.format(
      name=fn, length=len(uploaded[fn])))

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

ds=pd.read_csv("weather_logistic.csv")

print(ds.shape)

print(ds.head())

ds

#Alloting independent values to x
X=ds.iloc[:,1:-1].values
print(X)

#Alloting dependent values to y
y=ds.iloc[:,-1].values
print(y)

from sklearn.model_selection import train_test_split
#Splitting Dataset into training and testing set
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=50)
print("X_train\n",X_train)
print("X_test\n",X_test)
print("y_train\n",y_train)
print("y_test\n",y_test)

print("X_train shape : ",X_train.shape)
print("X_test shape : ",X_test.shape)
print("y_train shape : ",y_train.shape)
print("y_test shape : ",y_test.shape)

from sklearn import linear_model
from sklearn.linear_model import LogisticRegression
#Preprocessing/Scaling our data
lr=LogisticRegression(random_state=99)
mm=lr.fit(X_train,y_train)
print(mm.score(X_train,y_train))
print(mm.score(X_test,y_test))

#Importing the model
from sklearn.linear_model import LogisticRegression
clf=LogisticRegression()    #clf=classifier

# Training the model 
clf.fit(X_train,y_train)

# Predicting y values for testing dataset
y_pred=clf.predict(X_test)
#y_pred

#Confusion Matrix
from sklearn.metrics import confusion_matrix
cm=confusion_matrix(clf.predict(X_test),y_test)
print(cm)

#Graphical Confusion Matrix
from sklearn.metrics import ConfusionMatrixDisplay
ConfusionMatrixDisplay(cm).plot()

#Accuracy Score
from sklearn.metrics import accuracy_score
print("Wethear Prediction accuracy using Logistc Regression is ")
accuracy_score(clf.predict(X_test),y_test)